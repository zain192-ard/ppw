Traceback (most recent call last):
  File "C:\Users\ZAIN\AppData\Roaming\Python\Python313\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\ZAIN\AppData\Local\Programs\Python\Python313\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "C:\Users\ZAIN\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\ZAIN\AppData\Roaming\Python\Python313\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\ZAIN\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "C:\Users\ZAIN\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "C:\Users\ZAIN\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\ZAIN\AppData\Local\Programs\Python\Python313\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# === BAGIAN 2: Membaca & Menampilkan CSV ===
import pandas as pd

df = pd.read_csv("berita_detik.csv")
print("=== Contoh Data Hasil Crawling ===")
print(df.head(10))  # tampilkan 10 berita pertama

# Jika dijalankan di Jupyter Notebook, bisa menampilkan tabel interaktif:
df.head()

------------------


[31m---------------------------------------------------------------------------[39m
[31mEmptyDataError[39m                            Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[2][39m[32m, line 4[39m
[32m      1[39m [38;5;66;03m# === BAGIAN 2: Membaca & Menampilkan CSV ===[39;00m
[32m      2[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mpandas[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[34;01mpd[39;00m
[32m----> [39m[32m4[39m df = [43mpd[49m[43m.[49m[43mread_csv[49m[43m([49m[33;43m"[39;49m[33;43mberita_detik.csv[39;49m[33;43m"[39;49m[43m)[49m
[32m      5[39m [38;5;28mprint[39m([33m"[39m[33m=== Contoh Data Hasil Crawling ===[39m[33m"[39m)
[32m      6[39m [38;5;28mprint[39m(df.head([32m10[39m))  [38;5;66;03m# tampilkan 10 berita pertama[39;00m

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\io\parsers\readers.py:1026[39m, in [36mread_csv[39m[34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)[39m
[32m   1013[39m kwds_defaults = _refine_defaults_read(
[32m   1014[39m     dialect,
[32m   1015[39m     delimiter,
[32m   (...)[39m[32m   1022[39m     dtype_backend=dtype_backend,
[32m   1023[39m )
[32m   1024[39m kwds.update(kwds_defaults)
[32m-> [39m[32m1026[39m [38;5;28;01mreturn[39;00m [43m_read[49m[43m([49m[43mfilepath_or_buffer[49m[43m,[49m[43m [49m[43mkwds[49m[43m)[49m

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\io\parsers\readers.py:620[39m, in [36m_read[39m[34m(filepath_or_buffer, kwds)[39m
[32m    617[39m _validate_names(kwds.get([33m"[39m[33mnames[39m[33m"[39m, [38;5;28;01mNone[39;00m))
[32m    619[39m [38;5;66;03m# Create the parser.[39;00m
[32m--> [39m[32m620[39m parser = [43mTextFileReader[49m[43m([49m[43mfilepath_or_buffer[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwds[49m[43m)[49m
[32m    622[39m [38;5;28;01mif[39;00m chunksize [38;5;129;01mor[39;00m iterator:
[32m    623[39m     [38;5;28;01mreturn[39;00m parser

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\io\parsers\readers.py:1620[39m, in [36mTextFileReader.__init__[39m[34m(self, f, engine, **kwds)[39m
[32m   1617[39m     [38;5;28mself[39m.options[[33m"[39m[33mhas_index_names[39m[33m"[39m] = kwds[[33m"[39m[33mhas_index_names[39m[33m"[39m]
[32m   1619[39m [38;5;28mself[39m.handles: IOHandles | [38;5;28;01mNone[39;00m = [38;5;28;01mNone[39;00m
[32m-> [39m[32m1620[39m [38;5;28mself[39m._engine = [38;5;28;43mself[39;49m[43m.[49m[43m_make_engine[49m[43m([49m[43mf[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m.[49m[43mengine[49m[43m)[49m

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\io\parsers\readers.py:1898[39m, in [36mTextFileReader._make_engine[39m[34m(self, f, engine)[39m
[32m   1895[39m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(msg)
[32m   1897[39m [38;5;28;01mtry[39;00m:
[32m-> [39m[32m1898[39m     [38;5;28;01mreturn[39;00m [43mmapping[49m[43m[[49m[43mengine[49m[43m][49m[43m([49m[43mf[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[38;5;28;43mself[39;49m[43m.[49m[43moptions[49m[43m)[49m
[32m   1899[39m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m:
[32m   1900[39m     [38;5;28;01mif[39;00m [38;5;28mself[39m.handles [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python313\Lib\site-packages\pandas\io\parsers\c_parser_wrapper.py:93[39m, in [36mCParserWrapper.__init__[39m[34m(self, src, **kwds)[39m
[32m     90[39m [38;5;28;01mif[39;00m kwds[[33m"[39m[33mdtype_backend[39m[33m"[39m] == [33m"[39m[33mpyarrow[39m[33m"[39m:
[32m     91[39m     [38;5;66;03m# Fail here loudly instead of in cython after reading[39;00m
[32m     92[39m     import_optional_dependency([33m"[39m[33mpyarrow[39m[33m"[39m)
[32m---> [39m[32m93[39m [38;5;28mself[39m._reader = [43mparsers[49m[43m.[49m[43mTextReader[49m[43m([49m[43msrc[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwds[49m[43m)[49m
[32m     95[39m [38;5;28mself[39m.unnamed_cols = [38;5;28mself[39m._reader.unnamed_cols
[32m     97[39m [38;5;66;03m# error: Cannot determine type of 'names'[39;00m

[36mFile [39m[32mparsers.pyx:581[39m, in [36mpandas._libs.parsers.TextReader.__cinit__[39m[34m()[39m

[31mEmptyDataError[39m: No columns to parse from file

